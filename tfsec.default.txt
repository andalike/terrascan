
Result #1 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:196-216
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  196    resource "aws_security_group_rule" "cluster" {
  197      for_each = { for k, v in merge(
  198        local.cluster_security_group_rules,
  199        var.cluster_security_group_additional_rules
  200      ) : k => v if local.create_cluster_sg }
  201    
  202      # Required
  203      security_group_id = aws_security_group.cluster[0].id
  204      protocol          = each.value.protocol
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-no-public-ingress-sgr
      Impact Your port exposed to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/no-public-ingress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #2 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:25-91
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   25    resource "aws_eks_cluster" "this" {
   26      count = local.create ? 1 : 0
   27    
   28      name                      = var.cluster_name
   29      role_arn                  = local.cluster_role
   30      version                   = var.cluster_version
   31      enabled_cluster_log_types = var.cluster_enabled_log_types
   32    
   33      vpc_config {
   ..  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-eks-no-public-cluster-access
      Impact EKS can be access from the internet
  Resolution Don't enable public access to EKS Clusters

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/eks/no-public-cluster-access/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Results #3-11 PASSED  (9 similar results)
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/node_groups.tf:207-228
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  207    resource "aws_security_group_rule" "node" {
  208      for_each = { for k, v in merge(
  209        local.node_security_group_rules,
  210        local.node_security_group_recommended_rules,
  211        var.node_security_group_additional_rules,
  212      ) : k => v if local.create_node_sg }
  213    
  214      # Required
  215      security_group_id = aws_security_group.node[0].id
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Individual Causes
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_self_coredns_udp"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_443"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_kubelet"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_self_coredns_tcp"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_8443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_9443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_6443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_4443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_nodes_ephemeral"])
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-no-public-ingress-sgr
      Impact Your port exposed to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/no-public-ingress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #12 CRITICAL Security group rule allows egress to multiple public internet addresses. 
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/node_groups.tf:223
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  207    resource "aws_security_group_rule" "node" {
  ...  
  223  [   cidr_blocks              = lookup(each.value, "cidr_blocks", null)
  ...  
  228    }
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-no-public-egress-sgr
      Impact Your port is egressing data to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/no-public-egress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #13 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:25-91
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   25    resource "aws_eks_cluster" "this" {
   26      count = local.create ? 1 : 0
   27    
   28      name                      = var.cluster_name
   29      role_arn                  = local.cluster_role
   30      version                   = var.cluster_version
   31      enabled_cluster_log_types = var.cluster_enabled_log_types
   32    
   33      vpc_config {
   ..  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-eks-encrypt-secrets
      Impact EKS secrets could be read if compromised
  Resolution Enable encryption of EKS secrets

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/eks/encrypt-secrets/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Results #14-18 PASSED  (5 similar results)
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:359-373
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  350    resource "aws_iam_policy" "cluster_encryption" {
  ...  
  359      policy = jsonencode({
  360        Version = "2012-10-17"
  361        Statement = [
  362          {
  363            Action = [
  364              "kms:Encrypt",
  365              "kms:Decrypt",
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Individual Causes
  - Modules/terraform-aws-eks/main.tf:350-376 (aws_iam_policy.cluster_encryption[0]) 5 instances
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-iam-no-policy-wildcards
      Impact Overly permissive policies may grant access to sensitive resources
  Resolution Specify the exact permissions required, and to which resources they should apply instead of using wildcards.

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/iam/no-policy-wildcards/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Results #19-20 MEDIUM Control plane scheduler logging is not enabled. (2 similar results)
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:25-91
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   25  ┌ resource "aws_eks_cluster" "this" {
   26  │   count = local.create ? 1 : 0
   27  │ 
   28  │   name                      = var.cluster_name
   29  │   role_arn                  = local.cluster_role
   30  │   version                   = var.cluster_version
   31  │   enabled_cluster_log_types = var.cluster_enabled_log_types
   32  │ 
   33  └   vpc_config {
   ..  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Individual Causes
  - Modules/terraform-aws-eks/main.tf:25-91 (aws_eks_cluster.this[0]) 2 instances
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-eks-enable-control-plane-logging
      Impact Logging provides valuable information about access and usage
  Resolution Enable logging for the EKS control plane

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/eks/enable-control-plane-logging/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Results #21-23 PASSED Cluster plane API logging enabled (3 similar results)
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:25-91
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   25    resource "aws_eks_cluster" "this" {
   26      count = local.create ? 1 : 0
   27    
   28      name                      = var.cluster_name
   29      role_arn                  = local.cluster_role
   30      version                   = var.cluster_version
   31      enabled_cluster_log_types = var.cluster_enabled_log_types
   32    
   33      vpc_config {
   ..  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Individual Causes
  - Modules/terraform-aws-eks/main.tf:25-91 (aws_eks_cluster.this[0]) 3 instances
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-eks-enable-control-plane-logging
      Impact Logging provides valuable information about access and usage
  Resolution Enable logging for the EKS control plane

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/eks/enable-control-plane-logging/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #24 MEDIUM VPC Flow Logs is not enabled for VPC  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-vpc/main.tf:28-51
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   28  ┌ resource "aws_vpc" "this" {
   29  │   count = local.create_vpc ? 1 : 0
   30  │ 
   31  │   cidr_block          = var.use_ipam_pool ? null : var.cidr
   32  │   ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id
   33  │   ipv4_netmask_length = var.ipv4_netmask_length
   34  │ 
   35  │   assign_generated_ipv6_cidr_block     = var.enable_ipv6 && !var.use_ipam_pool ? true : null
   36  └   ipv6_cidr_block                      = var.ipv6_cidr
   ..  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-require-vpc-flow-logs-for-all-vpcs
      Impact Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.
  Resolution Enable flow logs for VPC

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #25 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  git::https:/github.com/terraform-aws-modules/terraform-aws-kms?ref=v1.1.0/main.tf:8-22
   via Modules/terraform-aws-eks/main.tf:123-151 (module.kms)
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
    8    resource "aws_kms_key" "this" {
    9      count = var.create && !var.create_external ? 1 : 0
   10    
   11      bypass_policy_lockout_safety_check = var.bypass_policy_lockout_safety_check
   12      customer_master_key_spec           = var.customer_master_key_spec
   13      deletion_window_in_days            = var.deletion_window_in_days
   14      description                        = var.description
   15      enable_key_rotation                = var.enable_key_rotation
   16      is_enabled                         = var.is_enabled
   ..  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-kms-auto-rotate-keys
      Impact Long life KMS keys increase the attack surface when compromised
  Resolution Configure KMS key to auto rotate

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/kms/auto-rotate-keys/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #26 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:106-117
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  106    resource "aws_cloudwatch_log_group" "this" {
  107      count = local.create && var.create_cloudwatch_log_group ? 1 : 0
  108    
  109      name              = "/aws/eks/${var.cluster_name}/cluster"
  110      retention_in_days = var.cloudwatch_log_group_retention_in_days
  111      kms_key_id        = var.cloudwatch_log_group_kms_key_id
  112    
  113      tags = merge(
  114        var.tags,
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-cloudwatch-log-group-customer-key
      Impact Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.
  Resolution Enable CMK encryption of CloudWatch Log Groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/cloudwatch/log-group-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #27 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:177-194
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  177    resource "aws_security_group" "cluster" {
  178      count = local.create_cluster_sg ? 1 : 0
  179    
  180      name        = var.cluster_security_group_use_name_prefix ? null : local.cluster_sg_name
  181      name_prefix = var.cluster_security_group_use_name_prefix ? "${local.cluster_sg_name}${var.prefix_separator}" : null
  182      description = var.cluster_security_group_description
  183      vpc_id      = var.vpc_id
  184    
  185      tags = merge(
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/add-description-to-security-group/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #28 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/main.tf:196-216
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  196    resource "aws_security_group_rule" "cluster" {
  197      for_each = { for k, v in merge(
  198        local.cluster_security_group_rules,
  199        var.cluster_security_group_additional_rules
  200      ) : k => v if local.create_cluster_sg }
  201    
  202      # Required
  203      security_group_id = aws_security_group.cluster[0].id
  204      protocol          = each.value.protocol
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Result #29 PASSED  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/node_groups.tf:185-205
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  185    resource "aws_security_group" "node" {
  186      count = local.create_node_sg ? 1 : 0
  187    
  188      name        = var.node_security_group_use_name_prefix ? null : local.node_sg_name
  189      name_prefix = var.node_security_group_use_name_prefix ? "${local.node_sg_name}${var.prefix_separator}" : null
  190      description = var.node_security_group_description
  191      vpc_id      = var.vpc_id
  192    
  193      tags = merge(
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/add-description-to-security-group/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


Results #30-39 PASSED  (10 similar results)
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Modules/terraform-aws-eks/node_groups.tf:207-228
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  207    resource "aws_security_group_rule" "node" {
  208      for_each = { for k, v in merge(
  209        local.node_security_group_rules,
  210        local.node_security_group_recommended_rules,
  211        var.node_security_group_additional_rules,
  212      ) : k => v if local.create_node_sg }
  213    
  214      # Required
  215      security_group_id = aws_security_group.node[0].id
  ...  
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Individual Causes
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_nodes_ephemeral"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_kubelet"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_4443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_8443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["egress_all"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_self_coredns_udp"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_6443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_9443_webhook"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_self_coredns_tcp"])
  - Modules/terraform-aws-eks/node_groups.tf:207-228 (aws_security_group_rule.node["ingress_cluster_443"])
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.4/checks/aws/ec2/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             4.494375ms
  parsing              1.6868005s
  adaptation           1.317666ms
  checks               7.422749ms
  total                1.70003529s

  counts
  ──────────────────────────────────────────
  modules downloaded   1
  modules processed    3
  blocks processed     633
  files read           14

  results
  ──────────────────────────────────────────
  passed               35
  ignored              0
  critical             1
  high                 0
  medium               3
  low                  0

  35 passed, 4 potential problem(s) detected.

